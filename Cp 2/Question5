 #include <stdio.h>
int lower_bound(int arr[], int n, int x) {
    int left = 0, right = n;
    while (left < right) {
        int mid = left + (right - left) / 2;
        if (arr[mid] < x)
            left = mid + 1;
        else
            right = mid;
    }
    return left;
}
int upper_bound(int arr[], int n, int x) {
    int left = 0, right = n;
    while (left < right) {
        int mid = left + (right - left) / 2;
        if (arr[mid] <= x)
            left = mid + 1;
        else
            right = mid;
    }
    return left;
}
int is_present(int arr[], int n, int x) {
    int left = 0, right = n;
    while (left < right) {
        int mid = left + (right - left) / 2;
        if (arr[mid] == x)
            return 1;
        else if (arr[mid] < x)
            left = mid + 1;
        else
            right = mid;
    }
    return 0;
}

int main() {
    int n;
    printf("Enter the number of elements in the array: ");
    scanf("%d", &n);
    
    int arr[n];
    printf("Enter sorted array elements: ");
    for (int i = 0; i < n; ++i)
        scanf("%d", &arr[i]);
    
    int x;
    printf("Enter the element to search: ");
    scanf("%d", &x);
    
    int lower_index = lower_bound(arr, n, x);
    int upper_index = upper_bound(arr, n, x);

    if (is_present(arr, n, x))
        printf("%d is present in the array.\n", x);
    else
        printf("%d is not present in the array.\n", x);
    
    printf("Index of first element greater than or equal to %d: %d\n", x, lower_index);
    printf("Index of first element greater than %d: %d\n", x, upper_index);

    return 0;
}
